---
# tasks file for php5
#
- name: Include OS specific variables
  include_vars: "{{ item }}"
  with_first_found: 
    - "{{ansible_distribution | lower }}-{{ansible_distribution_version}}.yml"
    - "{{ansible_distribution | lower }}.yml"
    - "{{ansible_os_family | lower}}.yml"
    - "default.yml"
  tags:
    - config

- name: run debug 1
  debug: msg="hello 1"

- name: Install the selinux python module
  yum: name=libselinux-python state=present
  when: ansible_os_family == "RedHat"
  tags:
    - config

- name: run debug 2
  debug: msg="hello 2"

- include: package_install.yml
  when: '{{ nginx_install_method == "package" }}'

- include: source_install.yml
  when: '{{ nginx_install_method == "source" }}'

- name: Create the directories for site specific configurations
  file: path=/etc/nginx/{{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - "sites-available"
    - "sites-enabled"
    - "conf.d"
  tags: 
   - config

- name: Copy the nginx configuration file 
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  tags: 
   - config
  notify: 
   - reload nginx

- name: Copy the nginx default configuration file 
  template: src=default.conf.j2 dest=/etc/nginx/conf.d/default.conf
  tags: 
   - config
  notify: 
   - reload nginx

- name: Copy ssl rules
  template: src=ssl.rules dest=/etc/nginx/ssl.rules

- name: Generate dhparams
  command: openssl dhparam -outform pem -out /etc/nginx/dhparam2048.pem 2048
  args:
    creates: /etc/nginx/dhparam2048.pem

- name: Copy the nginx default site configuration file 
  template: src=default.j2 dest=/etc/nginx/sites-available/default
  tags: 
   - config
  notify: 
   - reload nginx

- name: Create the link for site enabled specific configurations
  file: path=/etc/nginx/sites-enabled/default state=link src=/etc/nginx/sites-available/default 
  tags: 
   - config
  notify: 
   - reload nginx

- name: Create the configuration for upstreams
  template: src=upstream.j2 dest=/etc/nginx/conf.d/{{ item['upstream']['file_name'] }}.conf
  with_items: nginx_upstreams
  tags: 
   - config
  notify: 
   - reload nginx

- name: Create the configurations for sites
  template: src=site.j2 dest=/etc/nginx/sites-available/{{ item['server']['file_name'] }}
  with_items: nginx_sites
  register: nginx_site_configs
  tags: 
   - config
  notify: 
   - reload nginx

- name: Create the links to enable site configurations
  file: path=/etc/nginx/sites-enabled/{{ item['server']['file_name'] }} state=link src=/etc/nginx/sites-available/{{ item['server']['file_name'] }}
  with_items: nginx_sites
  tags: 
   - config
  notify: 
   - reload nginx

- name: start the nginx service
  service: name=nginx state=started enabled=yes

- name: Reload nginx immediately
  service: name=nginx state=reloaded
  when: nginx_site_configs|changed and nginx_immediate_site_reload

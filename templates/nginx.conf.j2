#{{ ansible_managed }}
user              {{ nginx_user }};

worker_processes  {{ ansible_processor_count }};
{% if nginx_worker_rlimit_nofile is defined %}
worker_rlimit_nofile {{ nginx_worker_rlimit_nofile }};
{% endif %}
pid        /var/run/nginx.pid;


events {
    worker_connections  {{ nginx_max_clients }};
    multi_accept {{ nginx_multi_accept|default('off') }};
    {% if nginx_use_epoll is defined and nginx_use_epoll %}
    use epoll;
    {% endif %}
}


http {

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        {% if nginx_access_log %}
        access_log {{ nginx_log_dir}}/{{ nginx_access_log_name}};
        {% else %}
        access_log off;
        {% endif %}
        {% if nginx_error_log %}
        error_log {{ nginx_log_dir}}/{{ nginx_error_log_name}};
        {% else %}
        error_log off;
        {% endif %}

{% for k,v in nginx_http_params.iteritems() %}
{%    if not v is string and v is iterable %}
      {% for h in v %}
    {{ k }}  {{ h }}{% if not h|match('.*}$') %};{% endif %}

        {% endfor %}
{%  else %}
    {{ k }}  {{ v }}{% if not v|match('.*}$') %};{% endif %}

{% endif %}
{% endfor %}

        gzip on;
        gzip_disable "msie6";


        map $http_upgrade $connection_upgrade {
          default upgrade;
          ''      close;
        }

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}
